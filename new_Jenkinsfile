		 
		 
		 
	def sailfishNodeA(String c) {
			node ('Sailfish1'){         				//Assigning the Node
			
			deletingContainer ('Checking existence')   //Deleting the Conta if existed
			
			showM('all the stages') 			      // calling the all stages 
			}
		}
		
	def showM(String a) {
      stage ('Spinnig Conta') {
          deletingContainer ('Checking existence')
          sh 'docker run -d --name qe1instance alpine'
      }
       stage ('Pull by commit') {
           sh 'docker ps -a'
       }
       stage ('Atc') {
           sh 'docker ps'
       }
       stage ('Security') {
           sh '''
           docker ps -a | grep 'alpine' | wc -l
           sleep 30
           '''
       }
        stage ('Security') {
           sh 'docker ps -a | grep seconds | wc -l'
       }
       stage ('Deleting Conta') {
           sh 'docker rm -f  qe1instance'
       }
       
}

def deletingContainer (String b) {
   sh '''
   x=$(docker ps -aq --filter "name=qe1instance" | grep -q .  && echo Found || echo Not Found)
    if [ $x=Found ]; 
 then 
     docker rm -f qe1instance
     sleep 30
else 
    echo 'container is not created' 
fi
    '''
}


timestamps {

  node () {

    stage ('checking for Condition') {

		def wholeStage (String d) {
	
	 node ('Sailfish1') {
	   
	   	cleanWs()
		
		
	   
				int conta_Num = sh(returnStdout: true, script: 'docker ps -a| grep alpine | wc -l')
		
	if (conta_Num != 0) {
	
				echo "no.of containers in Sailfish1 " + conta_Num
		    
				deletingContainer ('Checking existence')
		
				//If the condition is true so, coming out of the Sailfish1 node and getting in to Sailfish2
		
				echo 'Since Sailfish1 is already have a spinned container, we running it in Sailfish2 node'
		
    node ('master'){
		
				sleep 15//sleep for one minute
		    
			if (conta_Num >= 1) {
			
				echo "No.of containers in available in Master are " + conta_Num
				
				//If the condition is true
				
				}else {
				
					deletingContainer ('Checking existence')
					showM('Calling allStages')
				   }
				}			
			}
		  }  //closing the funcion of wholeStage
		  
		  sleep 180 // wait for the 3 minutes to check again the empty node
		  
		   wholeStage ('Calling again') 
		   
		} else { 
		
			sailfishNodeA('Calling the Stages')
		
			       }  
		        }
		    }
		}
}
